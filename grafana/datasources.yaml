apiVersion: 1
datasources:

- name: Tempo
  type: tempo
  uid: tempo
  url: http://tempo:3200
  jsonData:
    tracesToLogsV2:
      customQuery: true
      datasourceUid: 'loki'
      query: '{$${__tags}} | trace_id = "$${__trace.traceId}"'
      tags:
        - key: 'service.name'
          value: 'service_name'

    serviceMap:
      datasourceUid: 'mimir'
    search:
      hide: false
    nodeGraph:
      enabled: true
    lokiSearch:
      datasourceUid: 'loki'
    tracesToMetrics:
      datasourceUid: 'mimir'
    tracesToProfiles:
      customQuery: false
      datasourceUid: "pyroscope"
      profileTypeId: "process_cpu:cpu:nanoseconds:cpu:nanoseconds"
      tags:
        - key: "host.name"
          value: "hostname"

- name: Loki
  type: loki
  uid: loki
  url: http://loki:3100
  jsonData:
    derivedFields:
      - name: 'trace_id'
        matcherType: 'label'
        matcherRegex: 'trace_id'
        url: '$${__value.raw}'
        datasourceUid: 'tempo'
        urlDisplayLabel: 'Trace: $${__value.raw}'

- name: Pyroscope
  uid: pyroscope
  type: grafana-pyroscope-datasource
  url: http://pyroscope:4040
  version: 1
  jsonData:
    minStep: 15s
    # backendType: pyroscope

- name: Mimir
  uid: mimir
  type: prometheus
  access: proxy
  orgId: 1
  url: http://mimir:8080/prometheus
  version: 1
  editable: true
  jsonData:
    httpHeaderName1: "X-Scope-OrgID"
    timeInterval: 60s
    exemplarTraceIdDestinations:
      - name: traceID
        datasourceUid: tempo
        urlDisplayLabel: 'Trace: $${__value.raw}'
  secureJsonData:
    httpHeaderValue1: "demo"
  isDefault: true

- name: CloudWatch
  type: cloudwatch
  jsonData:
    authType: keys
    defaultRegion: '${AWS_DEFAULT_REGION}'
  secureJsonData:
    accessKey: '${AWS_ACCESS_KEY_ID}'
    secretKey: '${AWS_SECRET_ACCESS_KEY}'

